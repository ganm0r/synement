{"version":3,"sources":["WorkCard.js","Modal.js","utils.js","Board.js","PrefProvider.js","Constants.js","Settings.js","App.js","index.js"],"names":["WorkCard","data","onCardClick","showSubtitle","title","subject","subtitle","date_due","type","long","short","getParsedWorkType","className","onClick","Modal","str","isOpen","onClose","match","join","id","class","desc","Board","name","date","workData","showDateOnCards","useState","isModalOpen","setIsModalOpen","modalData","setModelData","map","work","PREF_ACADEMIC_YEAR","getYearPref","localStorage","getItem","setYearPref","pref","setItem","AcademicYear","Endpoints","today","tomorrow","after","Settings","AY","selectedYear","setSelectedYear","useEffect","console","log","PrefProvider","checked","readOnly","htmlFor","App","Date","toDateString","slice","getTime","todayWorkData","setTodayWorkData","tomorrowWorkData","setTomorrowWorkData","afterWorkData","setAfterWorkData","urls","year","getEndpointUrlsByYear","fetch","then","response","json","sort","a","b","sortObjectsByDate","exact","path","to","viewBox","fill","xmlns","d","target","rel","href","ga4react","GA4React","_","initialize","res","catch","err","finally","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95facaae.chunk.js","sourcesContent":["import './styles/WorkCard.css';\n\nconst WorkCard = ({ data, onCardClick, showSubtitle }) => {\n    const title = data.subject;\n    const subtitle = data.date_due;\n    const type = getParsedWorkType(data.type);\n\n    return (\n        <div className=\"wrapper\" onClick={onCardClick}>\n            <div className={`indicator ${type.long}`}>\n                <p>{type.short}</p>\n            </div>\n            <div className=\"details\">\n                <p className=\"title\">{title}</p>\n                {showSubtitle && <p className=\"subtitle\">{subtitle}</p>}\n            </div>\n        </div>\n    );\n};\n\nfunction getParsedWorkType(type) {\n    switch (type) {\n        case 'Assignment':\n            return {\n                long: 'assignment',\n                short: 'A'\n            };\n        case 'Experiment':\n            return {\n                long: 'experiment',\n                short: 'E'\n            };\n        case 'Quiz':\n            return {\n                long: 'quiz',\n                short: 'Q'\n            };\n        default:\n            return {\n                long: 'other',\n                short: 'O'\n            };\n    }\n}\n\nexport default WorkCard;\n","import './styles/Modal.css';\nimport { getAbbreviation } from './utils';\n\nconst Modal = ({ data, isOpen, onClose }) => {\n    if (!isOpen) return null;\n    return (\n        <>\n            <div className=\"overlay\"></div>\n            <div className=\"modal\">\n                <div className=\"modal-header\">\n                    <p className=\"modal-title\">\n                        {getAbbreviation(data.subject)}\n                    </p>\n                    <button\n                        className=\"modal-close-btn\"\n                        id=\"modal-close-btn\"\n                        onClick={onClose}>\n                        &times;\n                    </button>\n                </div>\n                <div class=\"modal-body\">\n                    <strong>Type:</strong>\n                    <p>{data.type}</p>\n                    <br />\n\n                    <strong>Due date:</strong>\n                    <p>{data.date_due}</p>\n                    <br />\n\n                    <strong>Title: </strong>\n                    <p>{data.title}</p>\n                    <br />\n\n                    <strong>Description:</strong>\n                    <p>{data.desc}</p>\n                    <br />\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Modal;\n","export const getAbbreviation = str => str.match(/[A-Z0-9]/g).join('');\n","import { useState } from 'react';\nimport WorkCard from './WorkCard';\nimport Modal from './Modal';\nimport './styles/Board.css';\n\nconst Board = ({ name, date, workData, showDateOnCards }) => {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [modalData, setModelData] = useState({});\n\n    return (\n        <div className=\"board\">\n            {date && <h1 className=\"board-date\">{date}</h1>}\n            <h2 className=\"board-title\">{name}</h2>\n            <div className=\"board-list\">\n                {workData.map(work => {\n                    return (\n                        <WorkCard\n                            key={work.id}\n                            data={work}\n                            onCardClick={() => {\n                                setModelData(work);\n                                setIsModalOpen(true);\n                            }}\n                            showSubtitle={showDateOnCards}\n                        />\n                    );\n                })}\n            </div>\n            <Modal\n                data={modalData}\n                isOpen={isModalOpen}\n                onClose={() => setIsModalOpen(false)}\n            />\n        </div>\n    );\n};\n\nexport default Board;\n","const PREF_ACADEMIC_YEAR = 'academicYearPreference';\n\nexport function getYearPref() {\n    return localStorage.getItem(PREF_ACADEMIC_YEAR);\n}\n\nexport function setYearPref(pref) {\n    localStorage.setItem(PREF_ACADEMIC_YEAR, pref);\n}\n","export const AcademicYear = {\n    SE: 'se',\n    TE: 'te',\n    BE: 'be'\n};\n\nexport const Endpoints = {\n    SE: {\n        today: 'https://synement.herokuapp.com/se/today',\n        tomorrow: 'https://synement.herokuapp.com/se/tomorrow',\n        after: 'https://synement.herokuapp.com/se/after'\n    },\n    TE: {\n        today: 'https://synement.herokuapp.com/te/today',\n        tomorrow: 'https://synement.herokuapp.com/te/tomorrow',\n        after: 'https://synement.herokuapp.com/te/after'\n    },\n    BE: {\n        today: 'https://synement.herokuapp.com/be/today',\n        tomorrow: 'https://synement.herokuapp.com/be/tomorrow',\n        after: 'https://synement.herokuapp.com/be/after'\n    }\n};\n","import { useState, useEffect } from 'react';\nimport * as PrefProvider from './PrefProvider';\nimport { AcademicYear as AY } from './Constants';\nimport './styles/Settings.css';\n\nconst Settings = () => {\n    const [selectedYear, setSelectedYear] = useState(AY.TE);\n\n    useEffect(() => {\n        console.log(localStorage);\n        setSelectedYear(PrefProvider.getYearPref());\n    }, []);\n\n    return (\n        <div className=\"main-app-container\">\n            <h1 className=\"settings-page-title\">settings</h1>\n            <hr />\n\n            <div className=\"all-settings-container\">\n                <div className=\"setting\">\n                    <input\n                        type=\"radio\"\n                        name=\"setting-btn\"\n                        id=\"year-se\"\n                        checked={selectedYear === AY.SE}\n                        onClick={() => {\n                            setSelectedYear(AY.SE);\n                            PrefProvider.setYearPref(AY.SE);\n                        }}\n                        readOnly\n                    />\n                    <label htmlFor=\"year-se\">SE</label>\n\n                    <input\n                        type=\"radio\"\n                        name=\"setting-btn\"\n                        id=\"year-te\"\n                        checked={selectedYear === AY.TE}\n                        onClick={() => {\n                            setSelectedYear(AY.TE);\n                            PrefProvider.setYearPref(AY.TE);\n                        }}\n                        readOnly\n                    />\n                    <label htmlFor=\"year-te\">TE</label>\n\n                    <input\n                        type=\"radio\"\n                        name=\"setting-btn\"\n                        id=\"year-be\"\n                        checked={selectedYear === AY.BE}\n                        onClick={() => {\n                            setSelectedYear(AY.BE);\n                            PrefProvider.setYearPref(AY.BE);\n                        }}\n                        readOnly\n                    />\n                    <label htmlFor=\"year-be\">BE</label>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Settings;\n","import { useState, useEffect } from 'react';\nimport Board from './Board';\nimport Settings from './Settings';\nimport { AcademicYear as AY, Endpoints } from './Constants';\nimport * as PrefProvider from './PrefProvider';\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\nimport './styles/App.css';\n\nconst App = () => {\n    const today = new Date().toDateString().slice(3, 11);\n    const tomorrow = new Date(new Date().getTime() + 24 * 60 * 60 * 1000)\n        .toDateString()\n        .slice(3, 11);\n\n    const [todayWorkData, setTodayWorkData] = useState([]);\n    const [tomorrowWorkData, setTomorrowWorkData] = useState([]);\n    const [afterWorkData, setAfterWorkData] = useState([]);\n\n    useEffect(() => {\n        initPrefs();\n        const urls = getEndpointUrlsByYear(PrefProvider.getYearPref());\n\n        fetch(urls.today)\n            .then(response => response.json())\n            .then(data => setTodayWorkData(data));\n\n        fetch(urls.tomorrow)\n            .then(response => response.json())\n            .then(data => setTomorrowWorkData(data));\n\n        fetch(urls.after)\n            .then(response => response.json())\n            .then(data => setAfterWorkData(sortObjectsByDate(data)));\n    }, []);\n\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\">\n                    <div className=\"main-app-container\">\n                        <div className=\"nav\">\n                            <Link to=\"/settings\">\n                                <svg\n                                    className=\"settings-icon\"\n                                    viewBox=\"0 0 25 25\"\n                                    fill=\"none\"\n                                    xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path\n                                        d=\"M12 23L2.5 17.5V6.5L12 1L21.5 6.5V17.5L12 23ZM12 3.312L4.5 7.653V16.347L12 20.689L19.5 16.347V7.653L12 3.311V3.312ZM12 16C10.9395 15.997 9.92294 15.5759 9.171 14.828C8.02724 13.6839 7.68525 11.9635 8.30448 10.4689C8.92371 8.97436 10.3822 8 12 8C13.0603 8.00284 14.0765 8.42402 14.828 9.172C16.3895 10.734 16.3895 13.266 14.828 14.828C14.0764 15.5757 13.0602 15.9968 12 16ZM12 10C11.0458 9.9998 10.2244 10.6736 10.0381 11.6094C9.85175 12.5452 10.3524 13.4823 11.2339 13.8476C12.1153 14.2129 13.1321 13.9047 13.6623 13.1114C14.1926 12.3182 14.0886 11.2608 13.414 10.586C13.0398 10.2098 12.5307 9.99879 12 10Z\"\n                                        fill=\"#FFFFFF\"></path>\n                                </svg>\n                            </Link>\n                        </div>\n                        <h1 className=\"page-title\">\n                            <a\n                                className=\"gh-repo\"\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                                href=\"https://github.com/grewscant/synement\">\n                                synement\n                            </a>\n                        </h1>\n                        <p className=\"page-author\">\n                            Made with 💖 by Danyl Fernandes\n                        </p>\n                        <p className=\"page-author contributors\">\n                            ✨ <strong>Contributors:</strong> Gandharv More\n                        </p>\n\n                        <div className=\"all-boards-container\">\n                            <Board\n                                name=\"Today\"\n                                date={today}\n                                workData={todayWorkData}\n                            />\n                            <Board\n                                name=\"Tomorrow\"\n                                date={tomorrow}\n                                workData={tomorrowWorkData}\n                            />\n                            <Board\n                                name=\"Coming up\"\n                                date=\"Next\"\n                                workData={afterWorkData}\n                                showDateOnCards\n                            />\n                        </div>\n                    </div>\n                </Route>\n                <Route path=\"/settings\">\n                    <Settings />\n                </Route>\n            </Switch>\n        </Router>\n    );\n};\n\nfunction sortObjectsByDate(data) {\n    return data.sort((a, b) => {\n        const dateA = new Date(a.date_due),\n            dateB = new Date(b.date_due);\n        return dateA - dateB;\n    });\n}\n\nfunction initPrefs() {\n    if (!PrefProvider.getYearPref()) PrefProvider.setYearPref(AY.TE);\n}\n\nfunction getEndpointUrlsByYear(year) {\n    switch (year) {\n        case AY.SE:\n            return Endpoints.SE;\n        case AY.TE:\n            return Endpoints.TE;\n        case AY.BE:\n            return Endpoints.BE;\n        default:\n            return Endpoints.TE;\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GA4React from 'ga-4-react';\nimport App from './App';\n\nconst ga4react = new GA4React('G-MMZFM66Y0X');\n\n(async _ => {\n    await ga4react\n        .initialize()\n        .then(res => console.log('Successfully started.'))\n        .catch(err => console.log('Failure starting.'))\n        .finally(() => {\n            ReactDOM.render(<App />, document.getElementById('root'));\n        });\n})();\n"],"sourceRoot":""}