{"version":3,"sources":["WorkCard.js","Modal.js","utils.js","Board.js","App.js","index.js"],"names":["WorkCard","data","onCardClick","showSubtitle","title","subject","subtitle","date_due","type","long","short","getParsedWorkType","className","onClick","Modal","str","isOpen","onClose","match","join","id","class","desc","Board","name","date","workData","showDateOnCards","useState","isModalOpen","setIsModalOpen","modalData","setModelData","map","work","App","today","Date","toDateString","slice","tomorrow","getTime","todayWorkData","setTodayWorkData","tomorrowWorkData","setTomorrowWorkData","afterWorkData","setAfterWorkData","useEffect","fetch","then","response","json","sort","a","b","sortObjectsByDate","target","rel","href","ga4react","GA4React","_","initialize","res","console","log","catch","err","finally","ReactDOM","render","document","getElementById"],"mappings":"8QA6CeA,MA3CE,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAC7BC,EAAQH,EAAKI,QACbC,EAAWL,EAAKM,SAChBC,EAeV,SAA2BA,GACvB,OAAQA,GACJ,IAAK,aACD,MAAO,CACHC,KAAM,aACNC,MAAO,KAEf,IAAK,aACD,MAAO,CACHD,KAAM,aACNC,MAAO,KAEf,IAAK,OACD,MAAO,CACHD,KAAM,OACNC,MAAO,KAEf,QACI,MAAO,CACHD,KAAM,QACNC,MAAO,MAnCNC,CAAkBV,EAAKO,MAEpC,OACI,sBAAKI,UAAU,UAAUC,QAASX,EAAlC,UACI,qBAAKU,UAAS,oBAAeJ,EAAKC,MAAlC,SACI,4BAAID,EAAKE,UAEb,sBAAKE,UAAU,UAAf,UACI,mBAAGA,UAAU,QAAb,SAAsBR,IACrBD,GAAgB,mBAAGS,UAAU,WAAb,SAAyBN,WC4B3CQ,G,MAvCD,SAAC,GAA+B,ICHfC,EDGdd,EAA4B,EAA5BA,KAAMe,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3B,OAAKD,EAED,qCACI,qBAAKJ,UAAU,YACf,sBAAKA,UAAU,QAAf,UACI,sBAAKA,UAAU,eAAf,UACI,mBAAGA,UAAU,cAAb,UCVWG,EDWUd,EAAKI,QCXRU,EAAIG,MAAM,aAAaC,KAAK,ODa9C,wBACIP,UAAU,kBACVQ,GAAG,kBACHP,QAASI,EAHb,qBAOJ,sBAAKI,MAAM,aAAX,UACI,2CACA,4BAAIpB,EAAKO,OACT,uBAEA,+CACA,4BAAIP,EAAKM,WACT,uBAEA,6CACA,4BAAIN,EAAKG,QACT,uBAEA,kDACA,4BAAIH,EAAKqB,OACT,gCA/BI,OEiCTC,G,MAhCD,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBACnC,EAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEA,OACI,sBAAKpB,UAAU,QAAf,UACKa,GAAQ,oBAAIb,UAAU,aAAd,SAA4Ba,IACrC,oBAAIb,UAAU,cAAd,SAA6BY,IAC7B,qBAAKZ,UAAU,aAAf,SACKc,EAASO,KAAI,SAAAC,GACV,OACI,cAAC,EAAD,CAEIjC,KAAMiC,EACNhC,YAAa,WACT8B,EAAaE,GACbJ,GAAe,IAEnB3B,aAAcwB,GANTO,EAAKd,SAW1B,cAAC,EAAD,CACInB,KAAM8B,EACNf,OAAQa,EACRZ,QAAS,kBAAMa,GAAe,W,MC2C/BK,MAtEH,WACR,IAAMC,GAAQ,IAAIC,MAAOC,eAAeC,MAAM,EAAG,IAC3CC,EAAW,IAAIH,MAAK,IAAIA,MAAOI,UAAY,OAC5CH,eACAC,MAAM,EAAG,IAEd,EAA0CX,mBAAS,IAAnD,mBAAOc,EAAP,KAAsBC,EAAtB,KACA,EAAgDf,mBAAS,IAAzD,mBAAOgB,EAAP,KAAyBC,EAAzB,KACA,EAA0CjB,mBAAS,IAAnD,mBAAOkB,EAAP,KAAsBC,EAAtB,KAoBA,OAlBAC,qBAAU,WAKNC,MAJkB,2CAKbC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAjD,GAAI,OAAI0C,EAAiB1C,MAEnCgD,MAPqB,8CAQhBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAjD,GAAI,OAAI4C,EAAoB5C,MAEtCgD,MAVkB,2CAWbC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAjD,GAAI,OAAI8C,EAqC1B,SAA2B9C,GACvB,OAAOA,EAAKoD,MAAK,SAACC,EAAGC,GAGjB,OAFc,IAAIlB,KAAKiB,EAAE/C,UACb,IAAI8B,KAAKkB,EAAEhD,aAxCYiD,CAAkBvD,SACtD,IAGC,sBAAKW,UAAU,qBAAf,UACI,oBAAIA,UAAU,aAAd,SACI,mBACIA,UAAU,UACV6C,OAAO,SACPC,IAAI,aACJC,KAAK,wCAJT,wBAQJ,mBAAG/C,UAAU,cAAb,uDACA,oBAAGA,UAAU,2BAAb,oBACM,mDADN,oBAIA,sBAAKA,UAAU,uBAAf,UACI,cAAC,EAAD,CAAOY,KAAK,QAAQC,KAAMW,EAAOV,SAAUgB,IAC3C,cAAC,EAAD,CACIlB,KAAK,WACLC,KAAMe,EACNd,SAAUkB,IAEd,cAAC,EAAD,CACIpB,KAAK,YACLC,KAAK,OACLC,SAAUoB,EACVnB,iBAAe,WCtD7BiC,EAAW,IAAIC,IAAS,iBAE9B,uCAAC,WAAMC,GAAN,SAAAR,EAAA,sEACSM,EACDG,aACAb,MAAK,SAAAc,GAAG,OAAIC,QAAQC,IAAI,4BACxBC,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAI,wBACzBG,SAAQ,WACLC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,YAN5D,2CAAD,0D","file":"static/js/main.2bf5e34e.chunk.js","sourcesContent":["import './styles/WorkCard.css';\n\nconst WorkCard = ({ data, onCardClick, showSubtitle }) => {\n    const title = data.subject;\n    const subtitle = data.date_due;\n    const type = getParsedWorkType(data.type);\n\n    return (\n        <div className=\"wrapper\" onClick={onCardClick}>\n            <div className={`indicator ${type.long}`}>\n                <p>{type.short}</p>\n            </div>\n            <div className=\"details\">\n                <p className=\"title\">{title}</p>\n                {showSubtitle && <p className=\"subtitle\">{subtitle}</p>}\n            </div>\n        </div>\n    );\n};\n\nfunction getParsedWorkType(type) {\n    switch (type) {\n        case 'Assignment':\n            return {\n                long: 'assignment',\n                short: 'A'\n            };\n        case 'Experiment':\n            return {\n                long: 'experiment',\n                short: 'E'\n            };\n        case 'Quiz':\n            return {\n                long: 'quiz',\n                short: 'Q'\n            };\n        default:\n            return {\n                long: 'other',\n                short: 'O'\n            };\n    }\n}\n\nexport default WorkCard;\n","import './styles/Modal.css';\nimport { getAbbreviation } from './utils';\n\nconst Modal = ({ data, isOpen, onClose }) => {\n    if (!isOpen) return null;\n    return (\n        <>\n            <div className=\"overlay\"></div>\n            <div className=\"modal\">\n                <div className=\"modal-header\">\n                    <p className=\"modal-title\">\n                        {getAbbreviation(data.subject)}\n                    </p>\n                    <button\n                        className=\"modal-close-btn\"\n                        id=\"modal-close-btn\"\n                        onClick={onClose}>\n                        &times;\n                    </button>\n                </div>\n                <div class=\"modal-body\">\n                    <strong>Type:</strong>\n                    <p>{data.type}</p>\n                    <br />\n\n                    <strong>Due date:</strong>\n                    <p>{data.date_due}</p>\n                    <br />\n\n                    <strong>Title: </strong>\n                    <p>{data.title}</p>\n                    <br />\n\n                    <strong>Description:</strong>\n                    <p>{data.desc}</p>\n                    <br />\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Modal;\n","export const getAbbreviation = str => str.match(/[A-Z0-9]/g).join('');\n","import { useState } from 'react';\nimport WorkCard from './WorkCard';\nimport Modal from './Modal';\nimport './styles/Board.css';\n\nconst Board = ({ name, date, workData, showDateOnCards }) => {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [modalData, setModelData] = useState({});\n\n    return (\n        <div className=\"board\">\n            {date && <h1 className=\"board-date\">{date}</h1>}\n            <h2 className=\"board-title\">{name}</h2>\n            <div className=\"board-list\">\n                {workData.map(work => {\n                    return (\n                        <WorkCard\n                            key={work.id}\n                            data={work}\n                            onCardClick={() => {\n                                setModelData(work);\n                                setIsModalOpen(true);\n                            }}\n                            showSubtitle={showDateOnCards}\n                        />\n                    );\n                })}\n            </div>\n            <Modal\n                data={modalData}\n                isOpen={isModalOpen}\n                onClose={() => setIsModalOpen(false)}\n            />\n        </div>\n    );\n};\n\nexport default Board;\n","import { useState, useEffect } from 'react';\nimport Board from './Board';\nimport './styles/App.css';\n\nconst App = () => {\n    const today = new Date().toDateString().slice(3, 11);\n    const tomorrow = new Date(new Date().getTime() + 24 * 60 * 60 * 1000)\n        .toDateString()\n        .slice(3, 11);\n\n    const [todayWorkData, setTodayWorkData] = useState([]);\n    const [tomorrowWorkData, setTomorrowWorkData] = useState([]);\n    const [afterWorkData, setAfterWorkData] = useState([]);\n\n    useEffect(() => {\n        const TODAY_URL = 'https://synement.herokuapp.com/te/today';\n        const TOMORROW_URL = 'https://synement.herokuapp.com/te/tomorrow';\n        const AFTER_URL = 'https://synement.herokuapp.com/te/after';\n\n        fetch(TODAY_URL)\n            .then(response => response.json())\n            .then(data => setTodayWorkData(data));\n\n        fetch(TOMORROW_URL)\n            .then(response => response.json())\n            .then(data => setTomorrowWorkData(data));\n\n        fetch(AFTER_URL)\n            .then(response => response.json())\n            .then(data => setAfterWorkData(sortObjectsByDate(data)));\n    }, []);\n\n    return (\n        <div className=\"main-app-container\">\n            <h1 className=\"page-title\">\n                <a\n                    className=\"gh-repo\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    href=\"https://github.com/grewscant/synement\">\n                    synement\n                </a>\n            </h1>\n            <p className=\"page-author\">Made with ðŸ’– by Danyl Fernandes</p>\n            <p className=\"page-author contributors\">\n                âœ¨ <strong>Contributors:</strong> Gandharv More\n            </p>\n\n            <div className=\"all-boards-container\">\n                <Board name=\"Today\" date={today} workData={todayWorkData} />\n                <Board\n                    name=\"Tomorrow\"\n                    date={tomorrow}\n                    workData={tomorrowWorkData}\n                />\n                <Board\n                    name=\"Coming up\"\n                    date=\"Next\"\n                    workData={afterWorkData}\n                    showDateOnCards\n                />\n            </div>\n        </div>\n    );\n};\n\nfunction sortObjectsByDate(data) {\n    return data.sort((a, b) => {\n        const dateA = new Date(a.date_due),\n            dateB = new Date(b.date_due);\n        return dateA - dateB;\n    });\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GA4React from 'ga-4-react';\nimport App from './App';\n\nconst ga4react = new GA4React('G-MMZFM66Y0X');\n\n(async _ => {\n    await ga4react\n        .initialize()\n        .then(res => console.log('Successfully started.'))\n        .catch(err => console.log('Failure starting.'))\n        .finally(() => {\n            ReactDOM.render(<App />, document.getElementById('root'));\n        });\n})();\n"],"sourceRoot":""}